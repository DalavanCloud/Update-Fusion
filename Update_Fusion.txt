var tableID = '2178714' // Add the table ID of the fusion table here
var rangeName = 'updateFusion' //the name of the range used in the program
    
    
//create button
function onOpen() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var menuEntries = [ {name: "Update Fusion Table", functionName: "updateFusion"}, 
                      {name: "Change Email Information", functionName: "fixEmail"},
                      {name: "Change Range of Data to be Sent (Include Headers)", functionName: "setRangeFusion"}];
  ss.addMenu("Update Fusion", menuEntries);
}

//main function
function updateFusion() {
  var email = UserProperties.getProperty('email');
  var password = UserProperties.getProperty('password');

  if (email === null || password === null) {
    email = Browser.inputBox('Enter email');
    password = Browser.inputBox('Enter password');
    UserProperties.setProperty('email',email);
    UserProperties.setProperty('password', password);
  } else {
    email = UserProperties.getProperty('email');
    password = UserProperties.getProperty('password');
  }
  var authToken = getGAauthenticationToken(email,password);
  deleteData(authToken, tableID);
  var updateMsg = updateData(authToken, tableID);
  var updatedRowsCount = updateMsg.split(/\n/).length - 2;
  Browser.msgBox("Fusion Tables Update", "Updated " + updatedRowsCount + " rows in the Fusion Table", Browser.Buttons.OK);  
}

//authentication fusion API
function getGAauthenticationToken(email, password) {
  password = encodeURIComponent(password);
  var response = UrlFetchApp.fetch("https://www.google.com/accounts/ClientLogin", {
    method: "post",
    payload: "accountType=GOOGLE&Email=" + email + "&Passwd=" + password + "&service=fusiontables&Source=testing"
  });
  var responseStr = response.getContentText();
  responseStr = responseStr.slice(responseStr.search("Auth=") + 5, responseStr.length);
  responseStr = responseStr.replace(/\n/g, "");
  return responseStr;
}

//query fusion API post
function queryFusionTables(authToken, query) {
  var URL = "http://www.google.com/fusiontables/api/query";
  var response = UrlFetchApp.fetch(URL, {
    method: "post",
    headers: {
      "Authorization": "GoogleLogin auth=" + authToken,
    },
    payload: "sql=" + query
  });
  return response.getContentText();
}

//delete old data in fusion table
function deleteData(authToken, tableID) {
  var query = encodeURIComponent("DELETE FROM " + tableID);
  return queryFusionTables(authToken, query);
}

//insert new data in fusion table
function updateData(authToken, tableID) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var blockDataRange = ss.getRangeByName(rangeName);
  var query = constructQuery(ss, blockDataRange, tableID);
  //Browser.msgBox(query);
  return queryFusionTables(authToken, query);
}

//this puts all the current information in the spreadsheet into a query
function constructQuery(ss, range, tableID) {
  var data = range.getValues();
  
  //remove ' from strings
  for( var i in data ) {
    for( var j in data[i] ) {
      if (isNaN(data[i][j])){
        data[i][j] = data[i][j].replace(/'/g, "\\'");
      }
    }
  }
  var headers = data[0];
  var queryPrepend = "INSERT INTO " + tableID + " (" + "\'" +headers.join("\',\'") + "\'" + ") VALUES ('";
  var query = "";

  for (var i = 1; i < data.length; ++i) {
    if (cellEmpty(data[i][0])) {
      continue;
    }
    query += queryPrepend + data[i].join("','") + "'); ";
  }
  return encodeURIComponent(query);
}

function cellEmpty(cellData) {
  return typeof(cellData) == "string" && cellData == "";
}

//change email if needed
function fixEmail() {
   var decision = Browser.msgBox("WARNING", "Are you sure you want to change your email?", Browser.Buttons.YES_NO);
   if (decision == 'yes'){
     var email = Browser.inputBox('Enter email');
     var password = Browser.inputBox('Enter password');
     UserProperties.setProperty('email',email);
     UserProperties.setProperty('password', password);
   }
}

//set range
function setRangeFusion() {
   var decision = Browser.msgBox("WARNING", "Are you sure you want to change the Update Fusion Range?", Browser.Buttons.YES_NO);
   if (decision == 'yes'){
     var ss = SpreadsheetApp.getActiveSpreadsheet();
     var check = ss.getRangeByName(rangeName)
         if (check != null) {
           ss.removeNamedRange(rangeName);
         }
     var range = SpreadsheetApp.getActiveRange()
     ss.setNamedRange(rangeName, range);
     Browser.msgBox("WARNING", "The range \"" + rangeName + "\" used to send data to Fusion has been changed.", Browser.Buttons.OK);
   }
}